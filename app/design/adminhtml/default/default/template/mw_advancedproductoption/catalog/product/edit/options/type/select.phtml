<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<script type="text/javascript">
//<![CDATA[
OptionTemplateSelect = '<table class="border" style="width: 850px;" cellpadding="0" cellspacing="0">'+
        '<input type="hidden" class="required-option-select-type-rows" name="validation_{{option_id}}_result" value="" >'+
        '<thead>'+
        '<tr class="headings">'+
            '<th class="type-title"><?php echo Mage::helper('catalog')->__('Title') ?> <span class="required">*</span></th>'+
            '<th class="type-price"><?php echo Mage::helper('catalog')->__('Price') ?></th>'+
            '<th class="type-type"><?php echo Mage::helper('catalog')->__('Price Type') ?></th>'+
            '<th class="type-sku"><?php echo Mage::helper('catalog')->__('SKU') ?></th>'+
            '<th class="type-order"><?php echo Mage::helper('catalog')->__('Sort Order') ?></th>'+
            '<th class="type-order"><?php echo Mage::helper('catalog')->__('Qty') ?></th>'+
            '<th class="last"><?php echo Mage::helper('catalog')->__('Image Size') ?></th>'+
            '<th class="type-order"><?php echo Mage::helper('catalog')->__('Image') ?></th>'+
            '<th class="type-butt last">&nbsp;</th>'+
        '</tr>'+
        '</thead>'+
        '<tbody id="select_option_type_row_{{option_id}}">'+
        '</tbody>'+
        '<tfoot>'+
        '<tr>'+
        '<td colspan="100" class="a-right"><?php echo $this->getAddButtonHtml() ?></td>'+
        '</tr>'+
        '</tfoot>'+
    '</table>';

OptionTemplateSelectRow = '<tr id="product_option_{{id}}_select_{{select_id}}">'+
            '<td>'+
            '<input type="hidden" name="product[options][{{id}}][values][{{select_id}}][option_type_id]" value="{{option_type_id}}">'+
            '<input type="hidden" id="product_option_{{id}}_select_{{select_id}}_is_delete" name="product[options][{{id}}][values][{{select_id}}][is_delete]" value="">'+
            '<input type="text" class="required-entry input-text select-type-title" id="product_option_{{id}}_select_{{select_id}}_title" name="product[options][{{id}}][values][{{select_id}}][title]" value="{{title}}">{{checkboxScopeTitle}}</td>'+
            '<td><input type="text" class="input-text validate-number product-option-price" id="product_option_{{id}}_select_{{select_id}}_price" name="product[options][{{id}}][values][{{select_id}}][price]" value="{{price}}"></td>'+
            '<td><?php echo $this->getPriceTypeSelectHtml() ?>{{checkboxScopePrice}}</td>'+
            '<td><input type="text" class="input-text" name="product[options][{{id}}][values][{{select_id}}][sku]" value="{{sku}}"></td>'+
            '<td><input type="text" class="validate-zero-or-greater input-text" name="product[options][{{id}}][values][{{select_id}}][sort_order]" value="{{sort_order}}"></td>'+
            '<td><input type="text" class="validate-zero-or-greater input-text" name="product[options][{{id}}][values][{{select_id}}][mw_qty]" value="{{mw_qty}}"></td>'+
            '<td class="type-last last" nowrap><input class="input-text" type="text" name="product[options][{{id}}][values][{{select_id}}][mw_image_size_x]" value="{{mw_image_size_x}}"> <?php echo Mage::helper('catalog')->__('x') ?> <input class="input-text" type="text" name="product[options][{{id}}][values][{{select_id}}][mw_image_size_y]" value="{{mw_image_size_y}}"> <?php echo Mage::helper('catalog')->__('px.') ?><br/><?php echo Mage::helper('advancedproductoption')->__('Apply for option image') ?></td>'+

            '<td><span title="Add image"><button id="new-option-file-{{id}}-{{select_id}}" type="button" class="scalable add" onclick="selectOptionType.createFileField(this.id)" style=""><span>{{image_button_label}}</span></button></span></td>'+
 
            '<td class="last"><span title="Delete row"><?php echo $this->getDeleteButtonHtml() ?></span></td>'+
            
        '</tr>'+
        '<tr id="image_option_row_{{select_id}}"><td colspan="9">{{mw_image}}</td></tr>'+
        '<tr><td id="file_option_row_{{select_id}}" colspan="9"><div id="file-upload-{{id}}-{{select_id}}"></div></td></tr>';
selectOptionType = {
    div : 'select_option_type_row',
    itemCount : 0,
    templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
    templateText : OptionTemplateSelectRow,
    add : function(data) {

        this.template = new Template(this.templateText, this.templateSyntax);

        if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
            element = $(Event.findElement(data, 'button'));
            optionId = element.readAttribute('id').sub('add_select_row_button_', '');
            data = {};
            data.option_type_id = '-1';
            data.select_id = this.itemCount;
        } else {
            optionId = data.option_id;
            data.select_id = data.option_type_id;
            this.itemCount = data.item_count;
        }

        data.id  = optionId;
		// them code vao========
        if (!data.image_button_label) data.image_button_label = 'Add Image'; 
		// them code vao======
        Element.insert($(this.div+'_'+data.id), {'bottom':this.template.evaluate(data)});

        if (data.checkboxScopeTitle) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_title') && data.scopeTitleDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_title').disable();
            }
        }
        if (data.checkboxScopePrice) {
            //set disabled
            if ($('product_option_'+data.id+'_select_'+data.select_id+'_price') && data.scopePriceDisabled) {
                $('product_option_'+data.id+'_select_'+data.select_id+'_price').disable();
                $('product_option_'+data.id+'_select_'+data.select_id+'_price_type').disable();
            }
        }

        if (data.price_type) {
            $A($('product_option_'+data.id+'_select_'+data.select_id+'_price_type').options).each(function(option){
                if (option.value==data.price_type) option.selected = true;
            });
        }

        this.itemCount++;
        this.bindRemoveButtons();
    },
    remove : function(event){
        var element = $(Event.findElement(event, 'tr'));

        if(element){
            $(element.readAttribute('id')+'_is_delete').value = '1';
            element.addClassName('no-display');
            element.addClassName('ignore-validate');
            element.hide();
            // them code vao remove image tr
            ids = element.readAttribute('id').split('_');
            id = ids[ids.length-1];
            $('image_option_row_'+id).remove();
            $('file_option_row_'+id).remove();
            
             // remove from children id
             //productChildrenOptions.removeChildrenElement(element); 
            
        }
    },
    bindRemoveButtons : function(){
        var buttons = $$('.delete-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.remove.bind(this));
            }
        }
    },
    bindAddButton : function()
    {
        var buttons = $$('.add-select-row');
        for(var i=0;i<buttons.length;i++){
            if(!$(buttons[i]).binded){
                $(buttons[i]).binded = true;
                Event.observe(buttons[i], 'click', this.add.bind(this));
            }
        }
    },
    // them code vao
    createFileField: function(strId) {
    	 var id = strId.split('-');
    	 var optionId = id[3];
    	 selectId = typeof id[4] != 'undefined' ? id[4] : '';
    	 var ids = '';
    	 if (selectId != '') {
    	 ids = optionId + '-' + selectId;
    	 } else {
    	 ids = optionId;
    	 }
    	 //name="file_'+ id[4]+'"
     	//name="file_'+ selectId+'"
    	 //name="product[options][values]['+selectId+ '][image]"
    	 var tpl = '<table class="customoptions-file-row" cellspacing="0" cellpadding="0"><tr>'+
    	 '<td><input class="input-file" type="file" name="file_'+ selectId+'" value="" /></td>'+
    	 '<td class="td-button"><span title="Hide">'+
    	 '<button type="button" onclick="selectOptionType.cleanFileRow(\''+ ids +'\')" class="delete delete-select-row icon-btn"><span>Hide</span></button></span></td>'+
    	 '</tr></table>';
    	 var field = $('file-upload-'+ optionId + '-' + selectId);
    	 if (field) {
    	 field.update(tpl);
    	 }
    	 },
    	 cleanFileRow: function(id) {
    	 id = id.split('-');
    	 var optionId = id[0];
    	 selectId = typeof id[1] != 'undefined' ? id[1] : '';
    	 var ids = '';
    	 if (selectId != '') {
    	 ids = optionId + '-' + selectId;
    	 } else {
    	 ids = optionId;
    	 }
    	 var fileRow = $('file-upload-'+ ids);
    	 if (fileRow) {
    	 fileRow.update('');
    	 }
    	 } 
        // ket thuc them code vao



    
}

if ($('option_panel_type_select')) {
    $('option_panel_type_select').remove();
}

selectOptionType.bindRemoveButtons();

Validation.addAllThese([
    ['required-option-select-type-rows', '<?php echo Mage::helper('catalog')->__('Please add rows to option.') ?>', function(v, elm) {
            var optionContainerElm = elm.up('div.grid');
            var selectTypesFlag = false;
            selectTypeElements = $$('#'+optionContainerElm.id+' .select-type-title');
            selectTypeElements.each(function(elm){
                if (elm.id && elm.up('tr').visible()) {
                    selectTypesFlag = true;
                }
            });
            elm.advaiceContainer = optionContainerElm.id+'_advice';
        return selectTypesFlag;
}]]);

if($('add_select_row_button')){
    Event.observe('add_select_row_button', 'click', selectOptionType.add.bind(selectOptionType));
}

//]]>
</script>
